swagger: '2.0'

info:
  title: CCCS
  version: "0.1"
consumes:
  - application/json
produces:
  - application/json

securityDefinitions:
  apiKeyHeader:
    type: apiKey
    in: header
    name: X-API-KEY
    x-apikeyInfoFunc: decorators.access_checks.ensure_key
  anonUser:
    type: apiKey
    in: header
    name: X-ANON
    x-apikeyInfoFunc: decorators.access_checks.ensure_anon_key
  oauth2:
    type: oauth2
    flow: implicit
    authorizationUrl: http://localhost:8081/oauth/authorize
    x-tokenInfoUrl: http://localhost:8081/api/v1/users/validate
    scopes:
      apiKey: Unique identifier of the user accessing the service.

host: 0.0.0.0:8080
basePath: /api/v2

schemes:
  - http
  - https

definitions:
  Base:
    {$ref: './definitions/types.yaml#/definitions/Base'}
  User:
    {$ref: './definitions/types.yaml#/definitions/User'}
  Media:
    {$ref: './definitions/types.yaml#/definitions/Media'}
  Otoken:
    {$ref: './definitions/types.yaml#/definitions/Otoken'}
  Project:
    {$ref: './definitions/types.yaml#/definitions/Project'}
  Activity:
    {$ref: './definitions/types.yaml#/definitions/Activity'}
  Task:
    {$ref: './definitions/types.yaml#/definitions/Task'}
  Submission:
    {$ref: './definitions/types.yaml#/definitions/Submission'}
  Comment:
    {$ref: './definitions/types.yaml#/definitions/Comment'}

parameters:
  id:
    {$ref: './params.yaml#/parameters/id'}

paths:
  /users:
    {$ref: 'paths/users.yaml#/paths/get_users'}
  /users/authorize:
    {$ref: 'paths/users.yaml#/paths/user_authorize'}
  /users/validate:
    {$ref: 'paths/users.yaml#/paths/user_validate'}
  /users/register:
    {$ref: 'paths/users.yaml#/paths/register_user'}
  /users/reset:
    {$ref: 'paths/users.yaml#/paths/user_reset'}
  /users/login:
    {$ref: 'paths/users.yaml#/paths/user_login'}
  /users/{id}:
    {$ref: 'paths/users.yaml#/paths/user_id'}
  /users/{id}/submissions:
    {$ref: 'paths/users.yaml#/paths/user_id_submissions'}

  /projects:
    {$ref: './paths/projects.yaml#/paths/projects'}
  /projects/count:
    {$ref: './paths/projects.yaml#/paths/count'}
  /projects/{id}:
    {$ref: './paths/projects.yaml#/paths/project_id'}

  /activities:
    {$ref: './paths/activities.yaml#/paths/activities'}
  /activities/count:
    {$ref: './paths/activities.yaml#/paths/count'}
  /activities/{id}:
    {$ref: './paths/activities.yaml#/paths/activity_id'}

  /tasks:
    {$ref: './paths/tasks.yaml#/paths/tasks'}
  /tasks/count:
    {$ref: './paths/tasks.yaml#/paths/count'}
  /tasks/{id}:
    {$ref: './paths/tasks.yaml#/paths/task_id'}

  /submissions:
    {$ref: './paths/submissions.yaml#/paths/submissions'}
  /submissions/count:
    {$ref: './paths/submissions.yaml#/paths/count'}
  /submission/{id}:
    {$ref: './paths/submissions.yaml#/paths/submission_id'}

  /media:
    {$ref: './paths/media.yaml#/paths/media'}
  /media/upload:
    {$ref: './paths/media.yaml#/paths/media_upload'}
  /media/{id}:
    {$ref: './paths/media.yaml#/paths/media_id'}
  /media/source/{id}:
    {$ref: './paths/media.yaml#/paths/media_source_id'}

  /comments:
    {$ref: './paths/comments.yaml#/paths/comments'}
  /comments/{id}:
    {$ref: './paths/comments.yaml#/paths/comment_id'}
